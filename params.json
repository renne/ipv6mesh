{"name":"IPv6MESH","tagline":"IPv6MESH extends the IPv6 protocol into an ad-hoc meshed communication network on OSI Layer 3.","body":"IPv6MESH <a href=\"https://flattr.com/submit/auto?user_id=renne&url=http://ipv6mesh.eu&title=IPv6MESH&language=C99&tags=github&category=software\"><img src=\"http://api.flattr.com/button/flattr-badge-large.png\" height=\"24em\" width=\"16%\"/></a>\r\n========\r\n\r\n**IPv6MESH** is a mesh network extension for the Internet Protocol 6.\r\n\r\n\r\n##**Features:**\r\n* Security based on **4096-bit RSA** key-pairs\r\n* **C**ryptographically **G**enerated **E**ndpoint **I**dentifiers **(CGEIDs)**\r\n  * 32-bit IANA prefix\r\n  * 96-bit SHA-2 HASH of RSA public key\r\n  * Compatibel with 128-bit IPv6-addresses\r\n  * RSA-based authentication\r\n  * **Decentralized ad-hoc generation**\r\n  * Can be exchanged between users via QR-code, NFC, VCards, etc.\r\n* End-2-End payload encryption\r\n  * RSA exchange of random stream-cipher key\r\n  * AES-256 stream-cipher\r\n  * Perfect Forward Secrecy\r\n* D1HT routing table\r\n  * UDP protocol\r\n  * Bootstrapping\r\n    * IPv6MESH nodes known via Neighbour Discovery Protocol\r\n    * IPv4/IPv6 anycast address\r\n  * CGEID-based index (prevents Sybil attacks)\r\n  * Record type for CGEID/RSA public key tupel\r\n  * Record type for CGEIDs of point-2-point mesh neighbours and IPv4/IPv6 adresses of routers\r\n  * RSA-signed records (prevents Spartacus attacks)\r\n  * BGP replacement\r\n  * Survives (global) BGP-blackout\r\n  * Survives (global) DNS-blackout\r\n  * STUN replacement\r\n* Conventional IPv6 routing for LANs\r\n  * CGEID creation/authorisation and payload encryption on ipv6mesh router\r\n  * CGEID provisioning for conventional IPv6 devices via DHCPv6\r\n* Conventional BGP-based IPv6 routing\r\n  * All ipv6mesh nodes with conventional IPv6 connectivity are egress routers\r\n  * All ipv6mesh nodes with conventional IPv6 connectivity AND BGP announcements (32-bit IANA prefix -> IPv6 address) are ingress routers\r\n  * Any BGP operator can publish BGP routes of ingress nodes by scanning the D1HT routing table\r\n  * Tunneling via conventional IPv4/IPv6 between ipv6mesh border nodes or nodes without direct connection to the mesh network\r\n* Implemetation of onion routing depends on performance\r\n* Filing of IETF Internet Draft planned when IPv6MESH scales well\r\n* **No support** for *Global No Such Agency Backup Service* **;-)** \r\n* Hardware/OS-independent\r\n* ***GPLv2 license*** (Flattr button/Bitcoin address must not be manipulated)\r\n* Coding conventions: https://github.com/renne/ipv6mesh/wiki/Coding-conventions\r\n* Feature requests and bugs: https://github.com/renne/ipv6mesh/issues\r\n* Wiki: https://github.com/renne/ipv6mesh/wiki\r\n\r\n##**Contact**\r\nEmail: webmaster *AT* ipv6mesh.eu\r\n\r\n##**Contribute**\r\n* You can ***support project IPv6MESH*** (hardware, internet connectivity, domains, administrative costs, ...) via Flattr by starring on GitHub\r\n* Fork, write code and make a pull request\r\n* Test and register bugs at https://github.com/renne/ipv6mesh/issues\r\n* Contribute to the Wiki at https://github.com/renne/ipv6mesh/wiki\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}